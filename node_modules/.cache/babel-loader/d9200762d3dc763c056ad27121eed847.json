{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/slidingPane.js\";\nimport React, { Component } from \"react\";\nimport ReactDom from \"react-dom\";\nimport PropTypes from \"prop-types\"; // styled\n\nimport StyledModal from \"./slidingPane.css\";\nconst modalRoot = document.getElementById(\"root\");\n\nclass SlidingPane extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fadeType: null\n    };\n    this.background = React.createRef();\n\n    this.transitionEnd = e => {\n      if (e.propertyName !== \"opacity\" || this.state.fadeType === \"in\") return;\n\n      if (this.state.fadeType === \"out\") {\n        this.props.onClose();\n      }\n    };\n\n    this.onEscKeyDown = e => {\n      if (e.key !== \"Escape\") return;\n      this.setState({\n        fadeType: \"out\"\n      });\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n      this.setState({\n        fadeType: \"out\"\n      }, () => {\n        console.log(this.state.fadeType);\n      });\n      console.log('Close button work fined');\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.onEscKeyDown, false);\n    setTimeout(() => this.setState({\n      fadeType: \"in\"\n    }), 0);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.props.isOpen && prevProps.isOpen) {\n      this.setState({\n        fadeType: \"out\"\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.onEscKeyDown, false);\n  }\n\n  render() {\n    console.log(\"this.props.children >>\", this.props.children);\n    return ReactDom.createPortal(React.createElement(StyledModal, {\n      id: this.props.id,\n      className: \"wrapper \".concat(this.props.class),\n      role: \"dialog\",\n      modalSize: this.props.size,\n      onTransitionEnd: this.transitionEnd,\n      fadeType: this.state.fadeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.props.children), React.createElement(\"div\", {\n      className: \"box-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(\"div\", {\n      className: \"background\",\n      onMouseDown: this.handleClick,\n      ref: this.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), modalRoot);\n  }\n\n}\n\nSlidingPane.defaultProps = {\n  id: \"\",\n  modalClass: \"\",\n  modalSize: \"md\"\n};\nSlidingPane.propTypes = {\n  id: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  modalClass: PropTypes.string,\n  modalSize: PropTypes.string\n};\nexport default SlidingPane;","map":{"version":3,"sources":["/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/slidingPane.js"],"names":["React","Component","ReactDom","PropTypes","StyledModal","modalRoot","document","getElementById","SlidingPane","state","fadeType","background","createRef","transitionEnd","e","propertyName","props","onClose","onEscKeyDown","key","setState","handleClick","preventDefault","console","log","componentDidMount","window","addEventListener","setTimeout","componentDidUpdate","prevProps","prevState","isOpen","componentWillUnmount","removeEventListener","render","children","createPortal","id","class","size","defaultProps","modalClass","modalSize","propTypes","string","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n// styled\r\nimport StyledModal from \"./slidingPane.css\";\r\nconst modalRoot = document.getElementById(\"root\");\r\nclass SlidingPane extends Component {\r\n  static defaultProps = {\r\n    id: \"\",\r\n    modalClass: \"\",\r\n    modalSize: \"md\"\r\n  };\r\nstatic propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    modalClass: PropTypes.string,\r\n    modalSize: PropTypes.string\r\n  };\r\nstate = { fadeType: null };\r\nbackground = React.createRef();\r\n\r\ncomponentDidMount() {\r\n    window.addEventListener(\"keydown\", this.onEscKeyDown, false);\r\n    setTimeout(() => this.setState({ fadeType: \"in\" }), 0);\r\n  }\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    if (!this.props.isOpen && prevProps.isOpen) {\r\n      this.setState({ fadeType: \"out\" });\r\n    }\r\n  }\r\ncomponentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.onEscKeyDown, false);\r\n  }\r\ntransitionEnd = e => {\r\n    if (e.propertyName !== \"opacity\" || this.state.fadeType === \"in\") return;\r\nif (this.state.fadeType === \"out\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\nonEscKeyDown = e => {\r\n    if (e.key !== \"Escape\") return;\r\n    this.setState({ fadeType: \"out\" });\r\n  };\r\nhandleClick = e => {\r\n    e.preventDefault();\r\n    this.setState({ fadeType: \"out\" },()=>{\r\n      console.log(this.state.fadeType)\r\n    });\r\n    console.log('Close button work fined')\r\n  };\r\nrender() {\r\n    console.log(\"this.props.children >>\", this.props.children)\r\n    return ReactDom.createPortal(\r\n      <StyledModal\r\n        id={this.props.id}\r\n        className={`wrapper ${this.props.class}`}\r\n        role=\"dialog\"\r\n        modalSize={this.props.size}\r\n        onTransitionEnd={this.transitionEnd}\r\n        fadeType={this.state.fadeType}\r\n      >\r\n        <div className=\"box-dialog\">\r\n          <div className=\"box-header\">\r\n            {/* <h4 className=\"box-title\">Title Of Modal</h4>\r\n            <button onClick={this.handleClick} className=\"close\">\r\n              Ã—\r\n            </button> */}\r\n          </div>\r\n          <div className=\"box-content\">{this.props.children}</div>\r\n          <div className=\"box-footer\">\r\n            <button onClick={this.handleClick} className=\"close\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`background`}\r\n          onMouseDown={this.handleClick}\r\n          ref={this.background}\r\n        />\r\n      </StyledModal>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\nexport default SlidingPane;"]},"metadata":{},"sourceType":"module"}