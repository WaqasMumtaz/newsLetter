{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/content.js\";\nimport React, { Component } from 'react';\nimport './content.css';\nimport SlidingPane from './slidingPane';\nimport ClosedLeftMenu from './closedLeftMenu';\nimport DrawingCanvas from './drawingCanvas';\nimport SlideContent from './slideContent';\nimport BackgroundImages from './backgroundImages';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport UploadFile from './uploadFile';\nimport Photos from './photos';\nimport imagesArray from './initial-data';\nimport Column from './columns';\nimport DroppableSection from './droppableSection';\n\nclass Content extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModalOpen: false,\n      selectedMenuOption: '',\n      draggingRowId: null,\n      starredProjects: imagesArray\n    };\n\n    this.toggleState = e => {\n      this.setState({\n        isModalOpen: false\n      });\n    };\n\n    this.selectMenuOption = menuItem => {\n      console.log('selectMenuOption', menuItem);\n      this.setState({\n        selectedMenuOption: menuItem,\n        isModalOpen: true\n      });\n    };\n\n    this.onDragEnd = result => {\n      // the only one that is required\n      const destination = result.destination,\n            source = result.source,\n            reason = result.reason;\n      console.log('source >>', source);\n      console.log('Destination >>', destination); //  console.log('Droppable item ID>>',destination.droppableId === source.droppableId);\n      // console.log('Index >>',destination.index === source.index);\n      // Not a thing to do...\n    };\n  }\n\n  render() {\n    const selectedOptionContent = {\n      background: React.createElement(BackgroundImages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      file: React.createElement(UploadFile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      photos: React.createElement(Photos, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })\n    }[this.state.selectedMenuOption]; // console.log('selected content background>>', selectedOptionContent)\n\n    console.log('menu option array >>', [this.state.selectedMenuOption]);\n    return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"mainSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menuSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(ClosedLeftMenu, {\n      selectMenuOption: this.selectMenuOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), this.state.isModalOpen ? React.createElement(SlidingPane, {\n      id: \"modal\",\n      isOpen: this.state.isModalOpen,\n      onClose: this.toggleState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(SlideContent, {\n      content: selectedOptionContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })) : null));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/content.js"],"names":["React","Component","SlidingPane","ClosedLeftMenu","DrawingCanvas","SlideContent","BackgroundImages","DragDropContext","Droppable","UploadFile","Photos","imagesArray","Column","DroppableSection","Content","state","isModalOpen","selectedMenuOption","draggingRowId","starredProjects","toggleState","e","setState","selectMenuOption","menuItem","console","log","onDragEnd","result","destination","source","reason","render","selectedOptionContent","background","file","photos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './content.css'\r\nimport SlidingPane from './slidingPane'\r\nimport ClosedLeftMenu from './closedLeftMenu'\r\nimport DrawingCanvas from './drawingCanvas'\r\nimport SlideContent from './slideContent'\r\nimport BackgroundImages from './backgroundImages'\r\nimport { DragDropContext,Droppable } from 'react-beautiful-dnd';\r\nimport UploadFile from './uploadFile';\r\nimport Photos from './photos';\r\nimport imagesArray from './initial-data';\r\nimport Column from './columns';\r\nimport DroppableSection from './droppableSection';\r\n\r\nclass Content extends Component {\r\n  state = {\r\n    isModalOpen: false,\r\n    selectedMenuOption: '',\r\n    draggingRowId: null,\r\n    starredProjects: imagesArray\r\n\r\n  }\r\n\r\n  toggleState = e => {\r\n    this.setState({\r\n      isModalOpen: false\r\n    })\r\n  }\r\n  selectMenuOption = menuItem => {\r\n    console.log('selectMenuOption', menuItem)\r\n    this.setState({\r\n      selectedMenuOption: menuItem,\r\n      isModalOpen: true\r\n    })\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    // the only one that is required\r\n    const { destination, source, reason } = result;\r\n    console.log('source >>', source);\r\n    console.log('Destination >>', destination);\r\n    //  console.log('Droppable item ID>>',destination.droppableId === source.droppableId);\r\n    // console.log('Index >>',destination.index === source.index);\r\n    // Not a thing to do...\r\n  }\r\n\r\n\r\n  render() {\r\n    const selectedOptionContent =\r\n      {\r\n        background: <BackgroundImages />,\r\n        file: <UploadFile />,\r\n        photos: <Photos />\r\n      }\r\n      [this.state.selectedMenuOption]\r\n    // console.log('selected content background>>', selectedOptionContent)\r\n     console.log('menu option array >>',[this.state.selectedMenuOption]);\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n      <section className='mainSection'>\r\n          <div className='menuSection'>\r\n            <ClosedLeftMenu selectMenuOption={this.selectMenuOption} />\r\n          </div>\r\n          {this.state.isModalOpen ? (\r\n            <SlidingPane\r\n              id='modal'\r\n              isOpen={this.state.isModalOpen}\r\n              onClose={this.toggleState}\r\n            >\r\n              <SlideContent content={selectedOptionContent} />\r\n            </SlidingPane>\r\n          ):\r\n          null\r\n          }\r\n      </section>\r\n      </DragDropContext>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content\r\n"]},"metadata":{},"sourceType":"module"}