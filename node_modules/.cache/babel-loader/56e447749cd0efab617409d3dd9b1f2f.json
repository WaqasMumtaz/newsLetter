{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/projects/DynamicNewsLetter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/backgroundImages.js\";\n// BackgroundImages\nimport React, { Component } from 'react';\nimport initialData from './initial-data';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Columns from './columns';\nexport default class BackgroundImages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = result => {\n      // the only one that is required\n      const destination = result.destination,\n            source = result.source,\n            reason = result.reason;\n      console.log('source >>', source);\n      console.log('Destination >>', destination); //  console.log('Droppable item ID>>',destination.droppableId === source.droppableId);\n      // console.log('Index >>',destination.index === source.index);\n      // Not a thing to do...\n\n      if (!destination || reason === 'CANCEL') {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const columns = this.state.stateData.columns[source.droppableId];\n      console.log('Columns >>', columns);\n      const newTasks = Array.from(columns.taskIds);\n      console.log('NewTasks >>', newTasks);\n      newTasks.splice(source.index, 1);\n      newTasks.splice(destination.index, 0, result.draggableId);\n      console.log('NewTasks Second >>', newTasks); //  add new column \n\n      const newColumn = _objectSpread({}, columns, {\n        taskIds: newTasks\n      });\n\n      console.log('This is new column >>', newColumn);\n\n      const newState = _objectSpread({}, this.state.stateData, {\n        columns: _objectSpread({}, this.state.stateData.columns, {\n          [newColumn.id]: newColumn\n        })\n      });\n\n      console.log('New State >>', newState);\n      this.setState({\n        stateData: newState\n      });\n    };\n\n    this.state = {\n      stateData: initialData\n    };\n  }\n\n  render() {\n    // const imagesArray = [\n    //   { id:'0', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'1', url: 'https://dummyimage.com/640x360/fff/aaa' },\n    //   { id:'2', url: 'https://loremflickr.com/640/360' },\n    //   { id:'3', url: 'https://placekitten.com/408/287' },\n    //   { id:'4', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'5', url: 'https://www.placecage.com/640/360' },\n    //   { id:'6', url: 'http://placeimg.com/640/360/any' },\n    //   { id:'7', url: 'https://placebear.com/640/360' },\n    //   { id:'8', url: 'https://imgplaceholder.com/640x360' },\n    //   { id:'9', url: 'https://placezombie.com/640x360' },\n    //   { id:'10', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'11', url: 'https://dummyimage.com/640x360/fff/aaa' },\n    //   { id:'12', url: 'https://loremflickr.com/640/360' },\n    //   { id:'13', url: 'https://placekitten.com/408/287' },\n    //   { id:'14', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'15', url: 'https://www.placecage.com/640/360' },\n    //   { id:'16', url: 'http://placeimg.com/640/360/any' }\n    // ]\n    return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slideContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.stateData.columnOrder.map(columId => {\n      console.log('map colm id >>', columId);\n      const column = this.state.stateData.columns[columId];\n      console.log('column >>', column);\n      const tasks = column.taskIds.map(taskId => this.state.stateData.tasks[taskId]);\n      console.log('Tasks >>', tasks);\n      return React.createElement(Columns, {\n        key: column.id,\n        column: column,\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }))) // <div className='slideContent'>\n    //   {\n    //     imagesArray.map((image,index)=>{\n    //       //  console.log('images >>', image.id)\n    //       return (\n    //         // <Draggable draggableId={image.id.toString()}\n    //         //  index={index}\n    //         //  key={index}\n    //         //  >\n    //         //   {(provided, snapshot) => (\n    //         //     <div\n    //         //       ref={provided.innerRef}\n    //         //       {...provided.draggableProps}\n    //         //       {...provided.dragHandleProps}\n    //         //       className='draggableThumb'\n    //         //     >\n    //               <img src={image.url} />\n    //         //       </div>\n    //         //   )}\n    //         // </Draggable>\n    //       )\n    //     })\n    //   }\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/backgroundImages.js"],"names":["React","Component","initialData","DragDropContext","Columns","BackgroundImages","constructor","props","onDragEnd","result","destination","source","reason","console","log","droppableId","index","columns","state","stateData","newTasks","Array","from","taskIds","splice","draggableId","newColumn","newState","id","setState","render","columnOrder","map","columId","column","tasks","taskId"],"mappings":"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","sourcesContent":["// BackgroundImages\nimport React, { Component } from 'react';\nimport initialData from './initial-data';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Columns from './columns';\n\n\n\nexport default class BackgroundImages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stateData: initialData\n    }\n  }\n\n\n  onDragEnd = (result) => {\n    // the only one that is required\n    const { destination, source, reason } = result;\n    console.log('source >>', source);\n    console.log('Destination >>', destination);\n    //  console.log('Droppable item ID>>',destination.droppableId === source.droppableId);\n    // console.log('Index >>',destination.index === source.index);\n    // Not a thing to do...\n    if (!destination || reason === 'CANCEL') {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n    const columns =  this.state.stateData.columns[source.droppableId];\n     console.log('Columns >>', columns);\n     const newTasks = Array.from(columns.taskIds);\n     console.log('NewTasks >>', newTasks);\n     newTasks.splice(source.index , 1);\n     newTasks.splice(destination.index , 0 , result.draggableId);\n     console.log('NewTasks Second >>', newTasks);\n\n    //  add new column \n     const newColumn = {...columns, taskIds:newTasks};\n     console.log('This is new column >>', newColumn);\n     \n     const newState = {...this.state.stateData , columns:{\n       ...this.state.stateData.columns,\n       [newColumn.id]:newColumn\n     }}\n     console.log('New State >>', newState);\n\n     this.setState({stateData:newState})\n\n  }\n\n\n\n  render () {\n    // const imagesArray = [\n    //   { id:'0', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'1', url: 'https://dummyimage.com/640x360/fff/aaa' },\n    //   { id:'2', url: 'https://loremflickr.com/640/360' },\n    //   { id:'3', url: 'https://placekitten.com/408/287' },\n    //   { id:'4', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'5', url: 'https://www.placecage.com/640/360' },\n    //   { id:'6', url: 'http://placeimg.com/640/360/any' },\n    //   { id:'7', url: 'https://placebear.com/640/360' },\n    //   { id:'8', url: 'https://imgplaceholder.com/640x360' },\n    //   { id:'9', url: 'https://placezombie.com/640x360' },\n    //   { id:'10', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'11', url: 'https://dummyimage.com/640x360/fff/aaa' },\n    //   { id:'12', url: 'https://loremflickr.com/640/360' },\n    //   { id:'13', url: 'https://placekitten.com/408/287' },\n    //   { id:'14', url: 'https://www.fillmurray.com/640/360' },\n    //   { id:'15', url: 'https://www.placecage.com/640/360' },\n    //   { id:'16', url: 'http://placeimg.com/640/360/any' }\n    // ]\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n       <div className='slideContent'>\n          {/* <NewMain/> */}\n          {/* <h1>Drag , Drop Project</h1>\n          <Main/> */}\n           {\n            this.state.stateData.columnOrder.map((columId) => {\n              console.log('map colm id >>', columId); \n              const column = this.state.stateData.columns[columId];\n              console.log('column >>', column);\n              const tasks = column.taskIds.map(taskId => this.state.stateData.tasks[taskId])\n              console.log('Tasks >>', tasks)\n              return <Columns key={column.id} column={column} tasks={tasks} />\n            })\n          }\n        </div>\n      </DragDropContext>\n      // <div className='slideContent'>\n      //   {\n      //     imagesArray.map((image,index)=>{\n      //       //  console.log('images >>', image.id)\n      //       return (\n      //         // <Draggable draggableId={image.id.toString()}\n      //         //  index={index}\n      //         //  key={index}\n      //         //  >\n      //         //   {(provided, snapshot) => (\n      //         //     <div\n      //         //       ref={provided.innerRef}\n      //         //       {...provided.draggableProps}\n      //         //       {...provided.dragHandleProps}\n      //         //       className='draggableThumb'\n      //         //     >\n                    \n      //               <img src={image.url} />\n      //         //       </div>\n      //         //   )}\n      //         // </Draggable>\n      //       )\n      //     })\n      //   }\n        \n      // </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}