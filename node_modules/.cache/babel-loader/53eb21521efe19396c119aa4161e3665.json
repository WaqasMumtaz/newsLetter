{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/content.js\";\nimport React, { Component } from 'react';\nimport './content.css';\nimport SlidingPane from './slidingPane';\nimport ClosedLeftMenu from './closedLeftMenu';\nimport DrawingCanvas from './drawingCanvas';\nimport SlideContent from './slideContent';\nimport BackgroundImages from './backgroundImages';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Droppable } from 'react-beautiful-dnd';\n\nclass Content extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isModalOpen: false,\n      selectedMenuOption: ''\n    };\n\n    this.toggleState = e => {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    };\n\n    this.selectMenuOption = menuItem => {\n      console.log('selectMenuOption', menuItem);\n      this.setState({\n        selectedMenuOption: menuItem,\n        isModalOpen: !this.state.isModalOpen\n      });\n    };\n\n    this.onBeforeDragStart = () => {\n      /* ... */\n    };\n\n    this.onDragStart = event => {\n      // event.dataTransfer.setData(\"text\", event.target.id);\n      console.log('onstart event ==> ', event); // console.log('nativeEvent ==> ', event.nativeEvent); //<- gets native JS event\n\n      /* ... */\n    };\n\n    this.onDragUpdate = () => {\n      /* ... */\n    };\n\n    this.onDragEnd = () => {// the only one that is required\n    };\n  }\n\n  render() {\n    const selectedOptionContent = {\n      background: React.createElement(BackgroundImages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })\n    }[this.state.selectedMenuOption]; // console.log('selected content background>>', selectedOptionContent)\n    // console.log('menu option array >>',[this.state.selectedMenuOption]);\n\n    return React.createElement(\"section\", {\n      className: \"mainSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onBeforeDragStart: this.onBeforeDragStart,\n      onDragStart: ev => this.onDragStart(ev),\n      onDragUpdate: this.onDragUpdate,\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"draggable-1\",\n      type: \"DRAWING\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      className: \"droppableSection\",\n      ref: provided.innerRef,\n      style: {\n        backgroundColor: snapshot.isDraggingOver ? '#ccc' : '#ececec'\n      }\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"menuSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ClosedLeftMenu, {\n      selectMenuOption: this.selectMenuOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), this.state.isModalOpen && React.createElement(SlidingPane, {\n      id: \"modal\",\n      isOpen: this.state.isModalOpen,\n      onClose: this.toggleState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(SlideContent, {\n      content: selectedOptionContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"canvasSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drawingCanvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/mac/Desktop/projects/DynamicNewsLetter/src/components/content/content.js"],"names":["React","Component","SlidingPane","ClosedLeftMenu","DrawingCanvas","SlideContent","BackgroundImages","DragDropContext","Droppable","Content","state","isModalOpen","selectedMenuOption","toggleState","e","setState","selectMenuOption","menuItem","console","log","onBeforeDragStart","onDragStart","event","onDragUpdate","onDragEnd","render","selectedOptionContent","background","ev","provided","snapshot","innerRef","backgroundColor","isDraggingOver","droppableProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './content.css'\r\nimport SlidingPane from './slidingPane'\r\nimport ClosedLeftMenu from './closedLeftMenu'\r\nimport DrawingCanvas from './drawingCanvas'\r\nimport SlideContent from './slideContent'\r\nimport BackgroundImages from './backgroundImages'\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nclass Content extends Component {\r\n  state = {\r\n    isModalOpen: false,\r\n    selectedMenuOption: ''\r\n  }\r\n\r\n  toggleState = e => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    })\r\n  }\r\n  selectMenuOption = menuItem => {\r\n    console.log('selectMenuOption', menuItem)\r\n    this.setState({\r\n      selectedMenuOption: menuItem,\r\n      isModalOpen: !this.state.isModalOpen\r\n    })\r\n  }\r\n\r\n  onBeforeDragStart = () => {\r\n    \r\n    /* ... */\r\n  }\r\n\r\n  onDragStart = (event) => {\r\n    // event.dataTransfer.setData(\"text\", event.target.id);\r\n    console.log('onstart event ==> ', event);\r\n    // console.log('nativeEvent ==> ', event.nativeEvent); //<- gets native JS event\r\n    /* ... */\r\n  }\r\n  onDragUpdate = () => {\r\n    /* ... */\r\n  }\r\n  onDragEnd = () => {\r\n    // the only one that is required\r\n  }\r\n\r\n  render () {\r\n    const selectedOptionContent = \r\n    {\r\n      background: <BackgroundImages />\r\n    }\r\n    [this.state.selectedMenuOption]\r\n    // console.log('selected content background>>', selectedOptionContent)\r\n    // console.log('menu option array >>',[this.state.selectedMenuOption]);\r\n    return (\r\n      <section className='mainSection'>\r\n        <DragDropContext\r\n          onBeforeDragStart={this.onBeforeDragStart}\r\n          onDragStart={(ev)=>this.onDragStart(ev)}\r\n          onDragUpdate={this.onDragUpdate}\r\n          onDragEnd={this.onDragEnd}\r\n        >\r\n          {/* <div>Hello world</div> */}\r\n        <Droppable droppableId='draggable-1' type='DRAWING'>\r\n            {(provided, snapshot) => (\r\n            <div\r\n                className='droppableSection'\r\n                ref={provided.innerRef}\r\n                style={{\r\n                backgroundColor: snapshot.isDraggingOver\r\n                    ? '#ccc'\r\n                    : '#ececec'\r\n                }}\r\n                {...provided.droppableProps}\r\n            >\r\n                <div className='menuSection'>\r\n                    <ClosedLeftMenu selectMenuOption={this.selectMenuOption} />\r\n                </div>\r\n                    {this.state.isModalOpen && (\r\n                      \r\n                    <SlidingPane\r\n                        id='modal'\r\n                        isOpen={this.state.isModalOpen}\r\n                        onClose={this.toggleState}\r\n                    >\r\n                        <SlideContent content={selectedOptionContent} />\r\n                    </SlidingPane>\r\n                    )}\r\n                <div className='canvasSection'>\r\n                    <div className='drawingCanvas' />\r\n                </div>\r\n            </div>\r\n            )}\r\n        </Droppable>\r\n        </DragDropContext>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content\r\n"]},"metadata":{},"sourceType":"module"}